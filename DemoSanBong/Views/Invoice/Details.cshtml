@model DemoSanBong.ViewModels.InvoiceViewModel

@{
    ViewData["Title"] = "Details";
    Layout = "~/Views/Shared/_Admin.cshtml";
    var rs = Model;
    string masage = ViewBag.Message;
}
@if (!string.IsNullOrEmpty(masage))
{
    if (masage == "Thanh toán thành công")
    {
        <div id="statusAlert" class="alert alert-success alert-dismissible fade show" role="alert">
            @masage
            <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
        </div>
    }
    else
    {
        <div id="statusAlert" class="alert alert-warning alert-dismissible fade show" role="alert">
            @masage
            <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
        </div>
    }
}
@if (Model.Status == 1)
{
    <h3>Phiếu thuê sân [@Model.Id]</h3>
}
else if (Model.Status == 2)
{
    <h3>Hóa đơn thanh toán [@Model.Id]</h3>
}

@if (Model.Status == 1)
{

    <div>
        <a class="btn btn-success" asp-action="Checkout" asp-route-id="@Model?.Id">Thanh toán</a>
        @*  <a asp-action="Index">Quay lại danh sách Phiếu</a> *@
    </div>
}
<div id="invoices">
    <hr />
    <dl class="row">
        <dt class="col-sm-2">
            Mã Phiếu
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Id)
        </dd>
        <dt class="col-sm-2">
            Khách hàng
        </dt>
        <dd class="col-sm-10">
            @Model.Booking.Customer.FullName
        </dd>
        <dt class="col-sm-2">
            SĐT
        </dt>
        <dd class="col-sm-10">
            @Model.Booking.Customer.PhoneNumber
        </dd>
        <dt class="col-sm-2">
            Thời gian lập phiếu
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.CreateDate)
        </dd>
        <dt class="col-sm-2">
            Thời gian nhận
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.CheckinDate)
        </dd>
        <dt class="col-sm-2">
            Thời gian trả
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.CheckoutDate)
        </dd>
        <dt class="col-sm-2">
            Trạng thái
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Status)
        </dd>
        <dt class="col-sm-2">
            Mã đặt sân
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Booking.Id)
        </dd>
        <dt class="col-sm-2">
            Nhân viên
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Cashier.FullName)
        </dd>
        <dt class="col-sm-2">
            Ghi chú
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Note)
        </dd>
    </dl>
</div>
<div id="Fields">
    <h4>Sân sử dụng</h4>
    <table class="table">
        <thead>
            <tr>
                <th>
                    Tên sân
                </th>
                <th>
                    Loại sân
                </th>
                <th>
                    Giá đặt sân
                </th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model.Fields)
            {
                <tr>
                    <td>
                        @Html.DisplayFor(modelItem => item.Name)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Type)
                    </td>
                    <td>
                        @string.Format("{0:#,0}", item.Price)
                        @if (Model.Booking.RentalType == 0)
                        {
                            @: đ/giờ
                        }
                        else
                        {
                            @: đ/Tháng
                        }
                    </td>
                </tr>
            }
        </tbody>
    </table>
</div>
@if (Model.Status != 2)
{
    <button class="btn btn-success" id="btnOrder">Thêm dịch vụ</button>
    <div id="SelectedService">
        @Html.Partial("_SelectedServices", Model.Order)
    </div>
}
<div id="Services" style="display:none">
    <h4>Order</h4>
    <table class="table">
        <thead>
            <tr>
                <th>
                    Mã dịch vụ
                </th>
                <th>
                    Tên dịch vụ
                </th>
                <th>
                    Loại dịch vụ
                </th>
                <th>
                    Giá
                </th>
                <th>
                    Hiện có
                </th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model.Services)
            {
                <tr>
                    <td>
                        @Html.DisplayFor(modelItem => item.Id)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Name)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Type)
                    </td>
                    <td>
                        @item.GetCurrPrice()
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Quantity)
                    </td>
                    <td>
                        <input type="number" name="qty" id="sv-@item.Id" min="1" value="1" />
                        <button class="btn btn-success order-service" data-svid="@item.Id" data-ivid="@Model.Id">Order</button>
                    </td>
                </tr>
            }
        </tbody>
    </table>
</div>


@section Scripts {
    <script>
        $(document).ready(function () {
            $('#btnOrder').on('click', function () {
                $('#Services').toggle();
            });
            $(".order-service").on("click", function () {
                var svId = $(this).data("svid");
                var ivId = $(this).data("ivid");
                var qty = $('#sv-' + svId).val();

                $.ajax({
                    url: '@Url.Action("AddService", "Invoice")',
                    type: 'POST',
                    data: { svId: svId, ivId: ivId, qty: qty },
                    success: function (result) {
                        $('#SelectedService').html(result);
                        $('#sv-' + svId).val(1); // Reset input value to 1
                        registerServiceButtons(); // Re-register event handlers
                    },
                    error: function (error) {
                        console.error('Error adding service:', error);
                    }
                });
            });

            function registerServiceButtons() {
                $(".increase-service").on("click", function () {
                    var svId = $(this).data("svid");
                    var ivId = $(this).data("ivid");

                    $.ajax({
                        url: '@Url.Action("IncreaseService", "Invoice")',
                        type: 'POST',
                        data: { svId: svId, ivId: ivId },
                        success: function (result) {
                            $('#SelectedService').html(result);
                            registerServiceButtons(); // Re-register event handlers
                        },
                        error: function (error) {
                            console.error('Error increasing service:', error);
                        }
                    });
                });

                $(".decrease-service").on("click", function () {
                    var svId = $(this).data("svid");
                    var ivId = $(this).data("ivid");

                    $.ajax({
                        url: '@Url.Action("DecreaseService", "Invoice")',
                        type: 'POST',
                        data: { svId: svId, ivId: ivId },
                        success: function (result) {
                            $('#SelectedService').html(result);
                            registerServiceButtons(); // Re-register event handlers
                        },
                        error: function (error) {
                            console.error('Error decreasing service:', error);
                        }
                    });
                });
            }

            registerServiceButtons(); // Initial registration
        });
    </script>
    <script>
        document.addEventListener('DOMContentLoaded', (event) => {
            setTimeout(function () {
                var alertElement = document.getElementById('statusAlert');
                if (alertElement) {
                    alertElement.classList.remove('show');
                    alertElement.classList.add('fade');
                    setTimeout(() => {
                        alertElement.remove();
                    }, 150);
                }
            }, 5000);
        });
    </script>
}