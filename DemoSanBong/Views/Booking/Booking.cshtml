@model DemoSanBong.ViewModels.BookingViewModel;

@{
    ViewData["Title"] = "Booking";
    Layout = "~/Views/Shared/_Layout.cshtml";
    double amount = 0;
    double deposit = 0;
}

<hr />

</div>
<form asp-action="Booking">
    <div class="container-fluid booking pb-5 wow fadeIn" data-wow-delay="0.1s" style="visibility: visible; animation-delay: 0.1s; animation-name: fadeIn;">
        <div class="container">
            <div class="bg-white shadow" style="padding: 35px;">
                <div class="row g-2">
                    <div class="col-md-10">
                        <div class="row g-2">
                            <div class="col-md-3">
                                <select class="form-select" name="RentalType">
                                    <option value="0">Thuê giờ</option>
                                    <option value="1">Thuê tháng</option>
                                </select>
                            </div>
                            <div class="col-md-3" id="selecteDay">
                                @Html.Partial("SelectedDate", Model.SelectDay)
                            </div>
                            <div id="begintime" class="col-md-3">
                                @Html.Partial("SelectBeginTime", Model.SelectBegin)
                            </div>
                            <div class="col-md-3" id="endtime">
                                @Html.Partial("SelectEndTime", Model.SelectEnd)
                            </div>

                            @if (!User.Identity.IsAuthenticated)
                            {
                                <div class="form-group col-md-6">
                                    <input asp-for="PhoneNumber" class="form-control" placeholder="Số điện thoại..." />
                                </div>
                                <div class="form-group col-md-6">
                                    <input asp-for="FullName" class="form-control" placeholder="Họ và tên..." />
                                </div>
                            }
                            else
                            {
                                <input type="hidden" asp-for="PhoneNumber" class="form-control" />
                                <input type="hidden" type="hidden" asp-for="FullName" class="form-control" />
                            }
                        </div>
                    </div>
                    <div class="col-md-2">
                        <button class="btn btn-primary w-100">Submit</button>
                    </div>
                </div>
            </div>
        </div>
    </div>
</form>
<div class="container">
    <div id="Fields" class="row g-2">
        <div id="availableFields" class="col-md-8">
            <h2>Chọn sân</h2>
            @Html.Partial("AvailableField", Model.AvailableField)
        </div>

        <div id="selectedFields" class="col-md-4">
            <h2>Đã chọn</h2>
            @Html.Partial("SelectedField", Model.SelectedFields)
        </div>
    </div>
</div>

@section Scripts {
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <script>
        $(document).ready(function () {
            function registerUpdateDay() {
                $('#SelectedDate').change(function () {
                    var selectedDate = $(this).val();
                    $.ajax({
                        url: '@Url.Action("UpdateSelectedDay", "Booking")',
                        type: 'POST',
                        data: { selectedDate: selectedDate },
                        success: function (result) {
                            console.log("AJAX success:", result);
                            var selectBegin = $('#CheckinDate');
                            var selectEnd = $('#CheckoutDate');

                            selectBegin.empty();
                            selectEnd.empty();

                            $.each(result.selectBegin, function (index, value) {
                                var optionText = new Date(value).toLocaleTimeString([], { hour: '2-digit', minute: '2-digit' });
                                selectBegin.append('<option value="' + value + '">' + optionText + '</option>');
                            });

                            // Add new options to selectEnd
                            $.each(result.selectEnd, function (index, value) {
                                var optionText = new Date(value).toLocaleTimeString([], { hour: '2-digit', minute: '2-digit' });
                                selectEnd.append('<option value="' + value + '">' + optionText + '</option>');
                            });
                            registerAddRoomButtons()
                            registerRemoveRoomButtons();
                        }
                    });
                });
            }
            function registerUpdateTime() {
                $('#CheckinDate, #CheckoutDate').change(function () {
                    var start = $('#CheckinDate').val();
                    var end = $('#CheckoutDate').val();

                    $.ajax({
                        url: '@Url.Action("UpdateTime", "Booking")',
                        type: 'POST',
                        data: { start: start, end: end },
                        success: function (result) {
                            // Thay thế nội dung của các thẻ div với dữ liệu nhận được từ server
                            $('#availableFields').html(result.availableFieldsHtml);
                            $('#selectedFields').html(result.selectedFieldsHtml);

                            // Đăng ký lại các sự kiện cần thiết sau khi nội dung được thay thế
                            registerUpdateTime();
                            registerAddRoomButtons();
                            registerRemoveRoomButtons();
                        },
                        error: function (error) {
                            console.error('Error updating time:', error);
                        }
                    });
                });
            }
            function registerAddRoomButtons() {
                $('.addRoomButton').click(function () {
                    var roomId = $(this).data('room-id');
                    $.ajax({
                        url: '@Url.Action("AddField", "Booking")',
                        type: 'POST',
                        data: { id: roomId },
                        success: function (result) {
                            $('#selectedFields').html(result);
                            registerRemoveRoomButtons()
                        }
                    });
                });
            }
            function registerRemoveRoomButtons() {
                $('.removeRoomButton').click(function () {
                    var roomId = $(this).data('room-id');
                    $.ajax({
                        url: '@Url.Action("RemoveField", "Booking")',
                        type: 'POST',
                        data: { id: roomId },
                        success: function (result) {
                            $('#selectedFields').html(result);
                            registerRemoveRoomButtons()
                        }
                    });
                });
            }
            function registerRentalTypeChange() {
                $('select[name="RentalType"]').change(function () {
                    var rentalType = $(this).val();
                    if (rentalType == '1') {
                        $('#begintime').css('visibility', 'hidden');
                        $('#endtime').css('visibility', 'hidden');
                    } else {
                        $('#begintime').css('visibility', 'visible');
                        $('#endtime').css('visibility', 'visible');
                    }

                    // Gửi AJAX request để cập nhật nội dung của SelectedField
                    $.ajax({
                        url: '@Url.Action("UpdateRentalType", "Booking")',
                        type: 'POST',
                        data: { rentalType: rentalType, start: start, end: end },
                        success: function (result) {
                            $('#selectedFields').html(result);
                            registerRemoveRoomButtons();
                        },
                        error: function (error) {
                            console.error('Error updating rental type:', error);
                        }
                    });
                });

                // Kiểm tra giá trị khi trang được tải lần đầu
                if ($('select[name="RentalType"]').val() == '1') {
                    $('#begintime, #endtime').hide();
                }
            }

            registerAddRoomButtons();
            registerRemoveRoomButtons();
            registerUpdateDay();
            registerUpdateTime();
            registerRentalTypeChange()
            // $('#CheckinDate').change(function () {
            //     var start = $(this).val();
            //     var end = $('#CheckoutDate').val();

            //     $.ajax({
            //         url: '@Url.Action("UpdateTime", "Booking")',
            //         type: 'POST',
            //         data: { start: start, end: end },
            //         success: function (result) {
            //             var selectEnd = $('#CheckoutDate');

            //             // Cập nhật các option của selectEnd
            //             selectEnd.empty();
            //             $.each(result.SelectEnd, function (index, value) {
            //                 selectEnd.append('<option value="' + value + '">' + new Date(value).toLocaleTimeString([], { hour: '2-digit', minute: '2-digit' }) + '</option>');
            //             });

            //             // Cập nhật danh sách sân trống
            //             $('#availableFields').html(result.AvailableFieldHtml); // assuming result contains HTML of available fields
            //         },
            //         error: function (error) {
            //             console.error('Error updating time:', error);
            //         }
            //     });
            // });


        });
    </script>
}
